--- 
 - name: configure  
   template:
     src: libvirtd.conf.j2
     dest: "{{ ansible_role_libvirtd_conf_path }}" 
     owner: root
     group: root
     mode: 0644
   notify: restart_libvirtd

 - name: ensure libvirtd is running
   service:
     name: "{{ ansible_role_libvirtd_service_name }}"
     state: started
     enabled: true

 - name: add users to libvirtd group
   user:
     name: "{{ item }}"
     groups: "{{ ansible_role_libvirtd_user_group }}"
     append: yes 
   with_items: "{{ ansible_role_libvirtd_users }}"

 - name: correct permissions
   file: 
     path: "{{ ansible_role_libvirtd.mntpoint }}"
     owner: "{{ ansible_role_libvirtd_user_group }}" 
     group: "{{ ansible_role_libvirtd_user_group }}"

 - name: define vmlandscape pool
   virt_pool:
     uri: '{{ ansible_role_libvirtd.qstring }}'
     name: '{{ ansible_role_libvirtd.zvol }}'
     xml: '{{ lookup("template", "dir.xml.jp2") }}'
     mode: overwrite
     state: present
     autostart: yes

 - name: define vmlandscape control pool
   virt_pool:
     uri: '{{ ansible_role_libvirtd.qstring }}'
     name: '{{ ansible_role_libvirtd.zvolcontrol }}'
     xml: '{{ lookup("template", "dircontrol.xml.jp2") }}'
     state: present
     mode: overwrite
     autostart: yes

 - name: activate vmlandscape pool
   virt_pool:
     uri: '{{ ansible_role_libvirtd.qstring }}'
     name: '{{ ansible_role_libvirtd.zvol }}'
     state: active
     autostart: yes

 - name: autostart vmlandscape control pool
   virt_pool:
     uri: '{{ ansible_role_libvirtd.qstring }}'
     name: '{{ ansible_role_libvirtd.zvolcontrol }}'
     state: active
     autostart: yes

 - name: define vmlandscape net
   virt_net:
     uri: '{{ ansible_role_libvirtd.qstring }}'
     name: '{{ ansible_role_libvirtd.netname }}'
     xml: '{{ lookup("template", "net.xml.jp2") }}'
     state: active
     autostart: yes

 - name: start vmlandscape net
   virt_net:
     uri: '{{ ansible_role_libvirtd.qstring }}'
     name: '{{ ansible_role_libvirtd.netname }}'
     autostart: yes
     state: active 

 - name: create dirs in vmlandscape control dir
   file:
     path: "{{ ansible_role_libvirtd.mntpointcontrol }}/{{ item }}"
     state: directory   
     owner: root
     mode: g+rws
     group: '{{ ansible_role_libvirtd_user_group }}'
   with_items:
   - sbin
   - bin
   - isos
   - public_html

 - name: create shell
   template:
     src: "create-vm.sh.j2"
     dest: "{{ ansible_role_libvirtd.mntpointcontrol }}/bin/create-vm-{{ item.key }}.sh"
     mode: 0755
     owner: root
     group: root
   tags:
   - shell
   with_dict: "{{ ansible_role_libvirtd_virtoses }}"

 - name: install apache
   package:
     name: apache2

 - name: enable service
   service:
     name: apache2
     state: started
     enabled: true

 - name: install vmlandscape
   template:
     src: vmlandscape.conf.j2
     dest: /etc/apache2/sites-available/vmlandscape.conf
   notify: apache_reload
 
 - name: symlink vmlandscape to sites-enabled
   file:
     src: ../sites-available/vmlandscape.conf
     dest: /etc/apache2/sites-enabled/vmlandscape.conf
     state: link
   notify: apache_reload

 - name: create deployment dirs
   file:
     dest: "{{ ansible_role_libvirtd.mntpointcontrol }}/public_html/{{ item }}"
     state: directory
   with_items:
   - opensuse
   - debian
   tags:
   - shell

 - name: deploy preseed
   template:
     src: "{{ item }}.preseed.j2"
     dest: "{{ ansible_role_libvirtd.mntpointcontrol }}/public_html/{{ item }}/{{ item }}.preseed"
   with_items:
   - opensuse
   - debian
   tags:
   - shell

 - name: deploy superuser scripts
   copy:
     src: "sbin/{{ item }}"
     dest: "{{ ansible_role_libvirtd.mntpoint_control_path }}/sbin/{{ item }}"
     mode: 0755
   with_items:
   - debian-base-9-clone.sh
   - debian-base-9-create.sh
   - vm-destroy.sh 
   notify: rebuild-debian-9-vm
